{
  "hash": "f6b8b643289a3daf260678b5d1022508",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Power analysis and Bayesian priors\"\ndate: \"2025-02-19\"\ntoc: TRUE\n---\n\n# Load library\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magrittr)\nlibrary(tidyverse)\n#library(rstanarm) # bayesian package\n#library(bayesplot)\n#library(tidybayes)\nlibrary(brms)\nlibrary(broom)\nlibrary(purrr)\nlibrary(marginaleffects)\nlibrary(patchwork)\nlibrary(cowplot)\nlibrary(gt)\nlibrary(gtsummary)\n#library(rstan)\noh_cols<- c('#50BECB',\t'#46A6B2',\t'#65C9D5',\t'#97D3DC',\t'#CDEBF0',\t'#EDE668',\t'#AA1E2D',\t'#E4E5E3',\t'#F26828',\t'#DC5C1D',\t'#F89C70',\t'#FDCEB0',\t'#2A3C47',\t'#18272F',\t'#404C58',\t'#646A74',\t'#C3C3C8',\t'#74308C')\noh_cols<- c('#65C9D5',\t'#EDE668',\t'#AA1E2D',\t'#F26828',\t'#FDCEB0',\t'#C3C3C8',\t'#74308C','#18272F')\n\nbrms_summary <- function(x) {\n  posterior::summarise_draws(x, \"mean\", \"sd\",  ~quantile(.x, probs = c(0.8,0.95)))\n}\n```\n:::\n\n\n# Establishing Bayesian priors, mcid, and similarity interval\n\nThe goal of this script is to showcase the code for conducting a Bayesian power analysis. Code is not run because it takes too long for code to execute. In brief, the Bayesian operating characteristics are specified: minimal clinical important difference (MCID), similarity interval (+/- MCID centered around 0), prior distributions, and expected effect size for a binary outcome. Power here is thought of as meeting a specified probability benefit (specified by clinician). So data are simulated for a specified effect and the posterior is evaluated for each simulated dataset. \\\n\nI like to visualize the prior distributions to see how they look. The code works for simulating under a specified sample size and the code will have to be re-run if you want to compare with other sample sizes. \\\n\n-   the MCID is log(0.8) or -0.2231436\\\n-   the similarity interval is \\[-0.2231436 - 0.1823216\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#priors\n#lets see range of OR in log scale\nordat<-round(tibble(or=c(0.2,0.5,0.8,1,1.2,2,4,5),logor=log(or)),3) # +/- 1.61\n\n\nprior.plot<-ggplot(data = tibble(x = -1.61:1.61), aes(x)) +annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=0.8,'rect',alpha=.5)+\n  stat_function(fun = dnorm, n = 101, args = list(0,.5),aes(colour=\"Skeptical\"),linewidth=2) +\n  stat_function(fun = dnorm, n = 101, args = list(log(0.8),.5),linewidth=2,aes(colour=\"Enthusiastic\")) +theme_bw()+xlab(\"Log-odds ratio\")+ylab(\"Density\")+scale_x_continuous(limits=c(-1.61,1.61),labels =ordat$logor,breaks=ordat$logor,sec.axis = dup_axis(name=\"Odds ratio\",labels=ordat$or))+scale_colour_manual(breaks=c(\"Skeptical\",\"Enthusiastic\"),values=c(\"#97D3DC\",\"#F89C70\"),name=\"Prior\")+theme(legend.position=\"top\")+annotate(\"text\",x=0,y=.02,label=\"Similarity interval\")\n\nprior.plot\n```\n\n::: {.cell-output-display}\n![](00_Bayesian_priors_power_analysis_files/figure-html/graphing bayesian priors-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggsave(prior.plot,filename=\"../02_Results_figures/Prior plot.png\",width=7,height=5,units=\"in\",dpi=600)\n\n\n## skeptical prior is normal(0,0.5)\n```\n:::\n\n\n# Power analysis\n\n## fitting initial model\n\nThis part of the script will be useful for the real analysis, which includes fitting the logistic model, checking the model, and testing hypotheses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn=100\nd<- tibble(group = rep(c(\"control\", \"treatment\"), each = n))|>\n  mutate(treatment = ifelse(group == \"control\", 0, 1),\n         y         = ifelse(group == \"control\", \n                            rbinom(n,1,.2),\n                            rbinom(n,1,.1)))\n\n##########optimized code \n\n#fit a brms model with skeptical prior\nfit <-brm(data = d,\n      family = binomial,\n      y|trials(1) ~ 0+ Intercept + treatment,\n      prior = c(prior(normal(0,.5), class = b),prior(normal(0,0.5),class=b,coef=\"Intercept\")),\n      seed = 1,chains=6,iter=10000,warmup=1000,cores=4)\nplot(fit) # see chains\nprint(fit) # check rhat and model output\n\n###posterior predictive checks \npp_check(fit,type=\"stat\",stat=\"mean\")\npp_check(fit,stat=\"mean\",ndraws=50)\n\n\n# get other quantiles \nbrms_summary(fit)|>\n  data.frame()|>\n  filter(variable==\"b_treatment\")\n\n#get priors\nget_prior(fit)\n#marginal effects\n\n\n#test hypotheses\n# test treatment <0, overall benefit\nob<-hypothesis(fit,\"treatment<0\",alpha=0.025)\nob\n##### clinical benefit, treatment< log(.8)\ncb<-hypothesis(fit,\"treatment<log(0.8)\",alpha=0.025)\ncb\n\n###test for similarity ; within log(0.8)-log(1.2)\nsi1<-hypothesis(fit,\"treatment < log(1.2)\",alpha=0.025)\nsi2<-hypothesis(fit,\"treatment <log(0.8)\",alpha=0.025)\nsi1$hypothesis$Post.Prob-si2$hypothesis$Post.Prob\n\n\n\n# dobule check my understanding by manually calculating probs\nsamples<-as.data.frame(fit)\nn<-length(samples$b_treatment)\n\n#manual for overall benefit\nsum(samples$b_treatment<0)/n\n#manual for clinical benefit\nsum(samples$b_treatment<log(0.8))/n\n#similarity interval \nsum(samples$b_treatment>log(0.8) & samples$b_treatment<log(1.2))/n\n\n#### hypothesis function and manual calculations are in agreement #####\n\n##plotting out the treatment effect \nsubs<-tibble(treatment=samples$b_treatment)|>\n  mutate(Prior=\"Skeptical\")\nmean.paste<-paste(round(exp(mean(subs$treatment)),3),\" odds ratio\\n\",round(mean(subs$treatment),3),\"  log odds ratio\",sep=\"\")\nmp<-round(mean(subs$treatment),3)\n\nggplot(subs,aes(x=treatment,..scaled..))+geom_density(fill='#46A6B2',alpha=.5)+theme_bw()+xlab(\"Treatment effect (log odds ratio)\")+\n  scale_x_continuous(limits=c(-2.302585,1.61),labels =c(-2.302,ordat$logor),breaks=c(-2.302585,ordat$logor),sec.axis = dup_axis(name=\"Treatment effect (odds ratio)\",labels=c(0.1,ordat$or)))+\n  scale_y_continuous(expand=c(0,0),limits=c(0,1.3))+\n  annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=1.3,'rect',alpha=.5)+\n  annotate(\"text\",x=mp,y=1.15,label = mean.paste)+\n  annotate(\"text\",x=0.182,y=1.2,label=\"Similarity interval\",hjust=-.05)+ylab(\"Density\")+\n  geom_vline(xintercept = -.223,linewidth=1,lty=\"dotdash\")\n\n#########################################################\n### refit with enthusiastic prior ###################\n#########################################################\nep.fit<-brm(data = d,\n      family = binomial,\n      y|trials(1) ~ 0+ Intercept + treatment,\n      prior = c(prior(normal(log(0.8),.5), class = b),prior(normal(0,0.5),class=b,coef=\"Intercept\")),\n      seed = 1,chains=6,iter=10000,warmup=1000,cores=4)\n\n#chekcing ep.fit model \nplot(ep.fit) # see chains\nprint(ep.fit) # check rhat and model output\n\n###posterior predictive checks \npp_check(ep.fit,type=\"stat\",stat=\"mean\")\npp_check(ep.fit,stat=\"mean\",ndraws=50)\n\n\n##get posterier draws \nep.samples<-as.data.frame(ep.fit)\nep.subs<-tibble(treatment=ep.samples$b_treatment)|>\n  mutate(Prior=\"Enthusiastic\")\n\n###make combined figure \ntfit<-rbind(subs,ep.subs)\n\ntfig<-ggplot(tfit,aes(x=treatment,..scaled..,fill=Prior))+geom_density(alpha=.5)+theme_bw()+xlab(\"Treatment effect (log odds ratio)\")+\n  scale_x_continuous(limits=c(-2.302585,log(1.2)),labels =c(-2.302,ordat$logor),breaks=c(-2.302585,ordat$logor),sec.axis = dup_axis(name=\"Treatment effect (odds ratio)\",labels=c(0.1,ordat$or)))+\n  scale_y_continuous(expand=c(0,0),limits=c(0,1.3))+\n  annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=1.3,'rect',alpha=.5)+\n  #annotate(\"text\",x=mp,y=1.15,label = mean.paste)+\n  #annotate(\"text\",x=0.182,y=1.2,label=\"Similarity interval\",hjust=-.05)+ylab(\"Density\")+\n  geom_vline(xintercept = -.223,linewidth=1,lty=\"dotdash\")+\n  theme(legend.position = \"bottom\")+ylab(\"Scaled density\")+\n  scale_fill_manual(values=c(\"#97D3DC\",\"#F89C70\"))+\n  geom_vline(xintercept=0,linewidth=.25)\ntfig\n#####################\n###build a table to summarize the trial results\n#####################\ntbl<-tfit|>\n  group_by(Prior)|>\n  summarize(OR=round(mean(exp(treatment)),3),LCI=round(exp(quantile(treatment,probs = 0.025)),2),UCI=round(exp(quantile(treatment,probs = 0.975)),2),`Clinical Benefit`=round(sum(if_else(treatment<log(0.8),1,0))/length(treatment),2),\n            )|>\n  mutate(CI=paste(LCI,\"-\",UCI,sep=\"\"))|>\n  select(Prior,OR,CI,`Clinical Benefit`)|>\n  gt()|>tab_style(\n    style = list(\n      cell_text(weight = \"bold\",align=\"center\")\n      ),\n    locations = cells_column_labels(columns = c(Prior,OR,CI,`Clinical Benefit`))\n    ) |>\n  cols_align(\n  align = \"center\",\n  columns = everything()\n)|>\n  tab_footnote(footnote=\"Skeptical prior ~ Normal(0,0.5)\",\n               locations = cells_column_labels(columns = Prior))|>\n  tab_footnote(footnote=\"Enthusiastic prior ~ Normal(-0.2231436,0.5)\",\n               locations = cells_column_labels(columns = Prior))|>\n  tab_footnote(footnote=\"Pr(Treatment<MCID)\",\n               locations = cells_column_labels(columns = `Clinical Benefit`))|>\n  tab_footnote(footnote=\"95% Bayesian Confidence Interval\",\n               locations = cells_column_labels(columns = CI))\n\n#`Overall Benefit [Pr(Treatment <0)]`=round(sum(if_else(treatment<0,1,0))/length(treatment),2)\ntbl\ngtsave(tbl,filename=\"../02_results_figures/prior_table.png\")\n\n###############################################################\n#####combining the table into the figure \n##########################################\ncfig<-ggdraw(tfig)+draw_image(\"../02_results_figures/prior_table.png\",hjust=-.26,width=.4,height=.4,vjust=-1.2)\ncfig\n\nggsave(cfig,filename=\"../02_results_figures/rct_figure.png\",width=7,height=5,dpi=600,unit=\"in\")\n```\n:::\n\n\n## simulation for power analysis -\\> 1000 simulations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n####fit simulate and fit\n\n\nsimfit <- function(seed, n) {\n  \n  set.seed(seed)\n  \n  d<- tibble(group = rep(c(\"control\", \"treatment\"), each = n))|>\n  mutate(treatment = ifelse(group == \"control\", 0, 1),\n         y         = ifelse(group == \"control\", \n                            rbinom(n,1,.2),\n                            rbinom(n,1,.1)))\n  \n  update(fit,\n         newdata = d, \n         seed = seed) |>\n    brms_summary()|>\n  data.frame()|>\n  filter(variable==\"b_treatment\")\n    #fixef() |>\n    #data.frame() |>\n    #rownames_to_column(\"parameter\") |>\n    #filter(parameter == \"treatment\")\n}\n#actual simulations \nn_sim<-1000 # number of simulations\nsim1 <-\n  tibble(seed = 1:n_sim) %>% \n  mutate(b1 = map(seed, simfit, n = 100)) %>% \n  unnest(b1)\nsim1\n#calculate power\nsim1|> \n  mutate(check = ifelse(X95. < 0, 1, 0),\n         mcid=if_else(X80.< -0.2231436,1,0),\n         total=if_else(check&mcid==1,1,0)) |>\n  summarise(power = mean(check),power2=mean(mcid),ptotal=mean(total))\n```\n:::\n\n\n# session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n  LAPACK version 3.12.1\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] gtsummary_2.2.0        gt_1.0.0               cowplot_1.1.3         \n [4] patchwork_1.3.0        marginaleffects_0.25.1 broom_1.0.8           \n [7] brms_2.22.0            Rcpp_1.0.14            lubridate_1.9.4       \n[10] forcats_1.0.0          stringr_1.5.1          dplyr_1.1.4           \n[13] purrr_1.0.4            readr_2.1.5            tidyr_1.3.1           \n[16] tibble_3.2.1           ggplot2_3.5.2          tidyverse_2.0.0       \n[19] magrittr_2.0.3        \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6         tensorA_0.36.2.1     xfun_0.52           \n [4] htmlwidgets_1.6.4    lattice_0.22-6       tzdb_0.5.0          \n [7] vctrs_0.6.5          tools_4.5.0          generics_0.1.3      \n[10] parallel_4.5.0       pkgconfig_2.0.3      Matrix_1.7-3        \n[13] data.table_1.17.0    checkmate_2.3.2      distributional_0.5.0\n[16] RcppParallel_5.1.10  lifecycle_1.0.4      compiler_4.5.0      \n[19] farver_2.1.2         Brobdingnag_1.2-9    munsell_0.5.1       \n[22] htmltools_0.5.8.1    bayesplot_1.12.0     yaml_2.3.10         \n[25] pillar_1.10.2        bridgesampling_1.1-2 abind_1.4-8         \n[28] nlme_3.1-168         posterior_1.6.1      tidyselect_1.2.1    \n[31] digest_0.6.37        mvtnorm_1.3-3        stringi_1.8.7       \n[34] labeling_0.4.3       fastmap_1.2.0        grid_4.5.0          \n[37] colorspace_2.1-1     cli_3.6.4            loo_2.8.0           \n[40] withr_3.0.2          scales_1.3.0         backports_1.5.0     \n[43] timechange_0.3.0     rmarkdown_2.29       matrixStats_1.5.0   \n[46] hms_1.1.3            coda_0.19-4.1        evaluate_1.0.3      \n[49] knitr_1.50           rstantools_2.4.0     rlang_1.1.6         \n[52] glue_1.8.0           xml2_1.3.8           rstudioapi_0.17.1   \n[55] jsonlite_2.0.0       R6_2.6.1            \n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "00_Bayesian_priors_power_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}