{
  "hash": "b96fb0bc157763d2d186961ec607d7af",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulating 95% confidence intervals\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\n\n\n# Load Libraries\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n\n\n\n# Simulating 95% frequentist confidence intervals \n\nA good explanation [here](https://thestatsgeek.com/2020/11/21/interpretation-of-frequentist-confidence-intervals-and-bayesian-credible-intervals/):\n\n**A 95% confidence interval is constructed such that if the model assumptions are correct and if you were to hypothetically repeat the experiment or sampling many many times, 95% of the intervals constructed would contain the true value of the parameter.** \n\nMy own words: **The 95% confidence interval is when the true parameter is contained within the interval 95% of the time from constructing the 95% confidence interval from repeated experiments under the assumption of a correct model.** \n\nLet's gain intuition by what this means:    \n\n1. Simulate data and do it a bunch of times\\\n2. Then calculate 95% confidence interval with say a t-test \n3. Determine how many times the true parameter (which we set in step 1) is in between the confidence intervals   \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#1) simulate data \nsim<-10000\n#dataset size\nn<-100\n# sampel data with mean 10, sd =1 \nx<-rnorm(n,mean=10,sd=1)\n#fit t.test ; grab lower and upper confidence interval\n#as.vector(c(t.test(x)$conf.int,t.test(x)$estimate))\n\n\n## now simulate across sim \n\n#for loop is prob best \n#prep dataset\n#d<-tibble(lower=rep(0,sim),upper=rep(0,sim),mean=rep(0,sim))\nd<-array(0,dim=c(sim,2))\n\nfor (i in 1:sim){\n  x<-rnorm(n,mean=10,sd=1)\n  d[i,]<-as.vector(c(t.test(x)$conf.int))\n}\n\n\n#head(d)\nd<-data.frame(d)\nnames(d)<-c(\"lower\",\"upper\")\nknitr::kable(head(d))\n```\n\n::: {.cell-output-display}\n\n\n|    lower|    upper|\n|--------:|--------:|\n| 9.864426| 10.24753|\n| 9.919894| 10.28799|\n| 9.776263| 10.12107|\n| 9.803304| 10.17358|\n| 9.815622| 10.19801|\n| 9.749086| 10.14565|\n\n\n:::\n\n```{.r .cell-code}\n#count how many times the lower and upper confidence interval is below true value of 10\nd<-d|>\n  mutate(out=1*(lower<10 & upper>10))\nmean(d$out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9518\n```\n\n\n:::\n\n```{.r .cell-code}\n#cases where confidence interval is does not include true parameter \nd|>\n  filter(out==0)|>\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      lower     upper out\n1 10.018179 10.417733   0\n2 10.018316 10.425242   0\n3  9.597978  9.976863   0\n4 10.038336 10.401601   0\n5  9.542640  9.984501   0\n6 10.000022 10.384590   0\n```\n\n\n:::\n:::\n\n\n\n\n\n\nAdditional notes:\\\n\nCementing interpretation: When you have a single 95% CI on a single sample, it doesn't mean, that the population mean belongs to this particular interval with a particular probability. If you were to repeat the experiment many many times and calculate this interval on each fo the samples, then 95% of the repeated samples would have the true population mean. \n\n# Session info \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n  LAPACK version 3.12.1\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.4 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.4     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6      jsonlite_2.0.0    compiler_4.5.0    tidyselect_1.2.1 \n [5] scales_1.3.0      yaml_2.3.10       fastmap_1.2.0     R6_2.6.1         \n [9] generics_0.1.3    knitr_1.50        htmlwidgets_1.6.4 munsell_0.5.1    \n[13] pillar_1.10.2     tzdb_0.5.0        rlang_1.1.6       stringi_1.8.7    \n[17] xfun_0.52         timechange_0.3.0  cli_3.6.4         withr_3.0.2      \n[21] magrittr_2.0.3    digest_0.6.37     grid_4.5.0        rstudioapi_0.17.1\n[25] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       evaluate_1.0.3   \n[29] glue_1.8.0        colorspace_2.1-1  rmarkdown_2.29    tools_4.5.0      \n[33] pkgconfig_2.0.3   htmltools_0.5.8.1\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}