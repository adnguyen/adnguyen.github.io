---
title: "Power analysis and Bayesian priors"
date: "2025-02-19"
toc: TRUE
---

# Load library

```{r load libraries , warning=FALSE,message=FALSE}
library(magrittr)
library(tidyverse)
#library(rstanarm) # bayesian package
#library(bayesplot)
#library(tidybayes)
library(brms)
library(broom)
library(purrr)
library(marginaleffects)
library(patchwork)
library(cowplot)
library(gt)
library(gtsummary)
#library(rstan)
oh_cols<- c('#50BECB',	'#46A6B2',	'#65C9D5',	'#97D3DC',	'#CDEBF0',	'#EDE668',	'#AA1E2D',	'#E4E5E3',	'#F26828',	'#DC5C1D',	'#F89C70',	'#FDCEB0',	'#2A3C47',	'#18272F',	'#404C58',	'#646A74',	'#C3C3C8',	'#74308C')
oh_cols<- c('#65C9D5',	'#EDE668',	'#AA1E2D',	'#F26828',	'#FDCEB0',	'#C3C3C8',	'#74308C','#18272F')

brms_summary <- function(x) {
  posterior::summarise_draws(x, "mean", "sd",  ~quantile(.x, probs = c(0.8,0.95)))
}

```

# Establishing Bayesian priors, mcid, and similarity interval

The goal of this script is to showcase the code for conducting a Bayesian power analysis. Code is not run because it takes too long for code to execute. In brief, the Bayesian operating characteristics are specified: minimal clinical important difference (MCID), similarity interval (+/- MCID centered around 0), prior distributions, and expected effect size for a binary outcome. Power here is thought of as meeting a specified probability benefit (specified by clinician). So data are simulated for a specified effect and the posterior is evaluated for each simulated dataset. \

I like to visualize the prior distributions to see how they look. The code works for simulating under a specified sample size and the code will have to be re-run if you want to compare with other sample sizes. \

-   the MCID is log(0.8) or `r log(0.8)`\
-   the similarity interval is \[`r log(0.8)` - `r log(1.2)`\]

```{r graphing bayesian priors}

#priors
#lets see range of OR in log scale
ordat<-round(tibble(or=c(0.2,0.5,0.8,1,1.2,2,4,5),logor=log(or)),3) # +/- 1.61


prior.plot<-ggplot(data = tibble(x = -1.61:1.61), aes(x)) +annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=0.8,'rect',alpha=.5)+
  stat_function(fun = dnorm, n = 101, args = list(0,.5),aes(colour="Skeptical"),linewidth=2) +
  stat_function(fun = dnorm, n = 101, args = list(log(0.8),.5),linewidth=2,aes(colour="Enthusiastic")) +theme_bw()+xlab("Log-odds ratio")+ylab("Density")+scale_x_continuous(limits=c(-1.61,1.61),labels =ordat$logor,breaks=ordat$logor,sec.axis = dup_axis(name="Odds ratio",labels=ordat$or))+scale_colour_manual(breaks=c("Skeptical","Enthusiastic"),values=c("#97D3DC","#F89C70"),name="Prior")+theme(legend.position="top")+annotate("text",x=0,y=.02,label="Similarity interval")

prior.plot

#ggsave(prior.plot,filename="../02_Results_figures/Prior plot.png",width=7,height=5,units="in",dpi=600)


## skeptical prior is normal(0,0.5)


```

# Power analysis

## fitting initial model

This part of the script will be useful for the real analysis, which includes fitting the logistic model, checking the model, and testing hypotheses.

```{r power analysis, eval=FALSE}
n=100
d<- tibble(group = rep(c("control", "treatment"), each = n))|>
  mutate(treatment = ifelse(group == "control", 0, 1),
         y         = ifelse(group == "control", 
                            rbinom(n,1,.2),
                            rbinom(n,1,.1)))

##########optimized code 

#fit a brms model with skeptical prior
fit <-brm(data = d,
      family = binomial,
      y|trials(1) ~ 0+ Intercept + treatment,
      prior = c(prior(normal(0,.5), class = b),prior(normal(0,0.5),class=b,coef="Intercept")),
      seed = 1,chains=6,iter=10000,warmup=1000,cores=4)
plot(fit) # see chains
print(fit) # check rhat and model output

###posterior predictive checks 
pp_check(fit,type="stat",stat="mean")
pp_check(fit,stat="mean",ndraws=50)


# get other quantiles 
brms_summary(fit)|>
  data.frame()|>
  filter(variable=="b_treatment")

#get priors
get_prior(fit)
#marginal effects


#test hypotheses
# test treatment <0, overall benefit
ob<-hypothesis(fit,"treatment<0",alpha=0.025)
ob
##### clinical benefit, treatment< log(.8)
cb<-hypothesis(fit,"treatment<log(0.8)",alpha=0.025)
cb

###test for similarity ; within log(0.8)-log(1.2)
si1<-hypothesis(fit,"treatment < log(1.2)",alpha=0.025)
si2<-hypothesis(fit,"treatment <log(0.8)",alpha=0.025)
si1$hypothesis$Post.Prob-si2$hypothesis$Post.Prob



# dobule check my understanding by manually calculating probs
samples<-as.data.frame(fit)
n<-length(samples$b_treatment)

#manual for overall benefit
sum(samples$b_treatment<0)/n
#manual for clinical benefit
sum(samples$b_treatment<log(0.8))/n
#similarity interval 
sum(samples$b_treatment>log(0.8) & samples$b_treatment<log(1.2))/n

#### hypothesis function and manual calculations are in agreement #####

##plotting out the treatment effect 
subs<-tibble(treatment=samples$b_treatment)|>
  mutate(Prior="Skeptical")
mean.paste<-paste(round(exp(mean(subs$treatment)),3)," odds ratio\n",round(mean(subs$treatment),3),"  log odds ratio",sep="")
mp<-round(mean(subs$treatment),3)

ggplot(subs,aes(x=treatment,..scaled..))+geom_density(fill='#46A6B2',alpha=.5)+theme_bw()+xlab("Treatment effect (log odds ratio)")+
  scale_x_continuous(limits=c(-2.302585,1.61),labels =c(-2.302,ordat$logor),breaks=c(-2.302585,ordat$logor),sec.axis = dup_axis(name="Treatment effect (odds ratio)",labels=c(0.1,ordat$or)))+
  scale_y_continuous(expand=c(0,0),limits=c(0,1.3))+
  annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=1.3,'rect',alpha=.5)+
  annotate("text",x=mp,y=1.15,label = mean.paste)+
  annotate("text",x=0.182,y=1.2,label="Similarity interval",hjust=-.05)+ylab("Density")+
  geom_vline(xintercept = -.223,linewidth=1,lty="dotdash")

#########################################################
### refit with enthusiastic prior ###################
#########################################################
ep.fit<-brm(data = d,
      family = binomial,
      y|trials(1) ~ 0+ Intercept + treatment,
      prior = c(prior(normal(log(0.8),.5), class = b),prior(normal(0,0.5),class=b,coef="Intercept")),
      seed = 1,chains=6,iter=10000,warmup=1000,cores=4)

#chekcing ep.fit model 
plot(ep.fit) # see chains
print(ep.fit) # check rhat and model output

###posterior predictive checks 
pp_check(ep.fit,type="stat",stat="mean")
pp_check(ep.fit,stat="mean",ndraws=50)


##get posterier draws 
ep.samples<-as.data.frame(ep.fit)
ep.subs<-tibble(treatment=ep.samples$b_treatment)|>
  mutate(Prior="Enthusiastic")

###make combined figure 
tfit<-rbind(subs,ep.subs)

tfig<-ggplot(tfit,aes(x=treatment,..scaled..,fill=Prior))+geom_density(alpha=.5)+theme_bw()+xlab("Treatment effect (log odds ratio)")+
  scale_x_continuous(limits=c(-2.302585,log(1.2)),labels =c(-2.302,ordat$logor),breaks=c(-2.302585,ordat$logor),sec.axis = dup_axis(name="Treatment effect (odds ratio)",labels=c(0.1,ordat$or)))+
  scale_y_continuous(expand=c(0,0),limits=c(0,1.3))+
  annotate(xmin=log(.8),xmax=log(1.2),ymin=0,ymax=1.3,'rect',alpha=.5)+
  #annotate("text",x=mp,y=1.15,label = mean.paste)+
  #annotate("text",x=0.182,y=1.2,label="Similarity interval",hjust=-.05)+ylab("Density")+
  geom_vline(xintercept = -.223,linewidth=1,lty="dotdash")+
  theme(legend.position = "bottom")+ylab("Scaled density")+
  scale_fill_manual(values=c("#97D3DC","#F89C70"))+
  geom_vline(xintercept=0,linewidth=.25)
tfig
#####################
###build a table to summarize the trial results
#####################
tbl<-tfit|>
  group_by(Prior)|>
  summarize(OR=round(mean(exp(treatment)),3),LCI=round(exp(quantile(treatment,probs = 0.025)),2),UCI=round(exp(quantile(treatment,probs = 0.975)),2),`Clinical Benefit`=round(sum(if_else(treatment<log(0.8),1,0))/length(treatment),2),
            )|>
  mutate(CI=paste(LCI,"-",UCI,sep=""))|>
  select(Prior,OR,CI,`Clinical Benefit`)|>
  gt()|>tab_style(
    style = list(
      cell_text(weight = "bold",align="center")
      ),
    locations = cells_column_labels(columns = c(Prior,OR,CI,`Clinical Benefit`))
    ) |>
  cols_align(
  align = "center",
  columns = everything()
)|>
  tab_footnote(footnote="Skeptical prior ~ Normal(0,0.5)",
               locations = cells_column_labels(columns = Prior))|>
  tab_footnote(footnote="Enthusiastic prior ~ Normal(-0.2231436,0.5)",
               locations = cells_column_labels(columns = Prior))|>
  tab_footnote(footnote="Pr(Treatment<MCID)",
               locations = cells_column_labels(columns = `Clinical Benefit`))|>
  tab_footnote(footnote="95% Bayesian Confidence Interval",
               locations = cells_column_labels(columns = CI))

#`Overall Benefit [Pr(Treatment <0)]`=round(sum(if_else(treatment<0,1,0))/length(treatment),2)
tbl
gtsave(tbl,filename="../02_results_figures/prior_table.png")

###############################################################
#####combining the table into the figure 
##########################################
cfig<-ggdraw(tfig)+draw_image("../02_results_figures/prior_table.png",hjust=-.26,width=.4,height=.4,vjust=-1.2)
cfig

ggsave(cfig,filename="../02_results_figures/rct_figure.png",width=7,height=5,dpi=600,unit="in")
```

## simulation for power analysis -\> 1000 simulations

```{r simulation and fit,eval=FALSE}
####fit simulate and fit


simfit <- function(seed, n) {
  
  set.seed(seed)
  
  d<- tibble(group = rep(c("control", "treatment"), each = n))|>
  mutate(treatment = ifelse(group == "control", 0, 1),
         y         = ifelse(group == "control", 
                            rbinom(n,1,.2),
                            rbinom(n,1,.1)))
  
  update(fit,
         newdata = d, 
         seed = seed) |>
    brms_summary()|>
  data.frame()|>
  filter(variable=="b_treatment")
    #fixef() |>
    #data.frame() |>
    #rownames_to_column("parameter") |>
    #filter(parameter == "treatment")
}
#actual simulations 
n_sim<-1000 # number of simulations
sim1 <-
  tibble(seed = 1:n_sim) %>% 
  mutate(b1 = map(seed, simfit, n = 100)) %>% 
  unnest(b1)
sim1
#calculate power
sim1|> 
  mutate(check = ifelse(X95. < 0, 1, 0),
         mcid=if_else(X80.< -0.2231436,1,0),
         total=if_else(check&mcid==1,1,0)) |>
  summarise(power = mean(check),power2=mean(mcid),ptotal=mean(total))


```

# session info

```{r session info}
sessionInfo()
```
